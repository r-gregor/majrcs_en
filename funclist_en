CURRYR=$(date +%Y)

### Functions ###
FF_en="/c/Users/gregor.redelonghi/majstaf_en/majprogs_en/FireFox_63.0.1/FirefoxPortable.exe"

# fukcija, pajpne ukaz na "less -I"
function so() {
eval "$@" | less -I~
}

# --------------------------------------------------------

function cv() {
# cdargs "$1" && cd "'cat "$HOME/.cdargs"'" ;
cdargs "$1" && cd "$(cat "$HOME/.cdargsresult")" ;
} 

# --------------------------------------------------------

# funkcija, ki pred ukazom sprazni(clear) ekran
function kl() {
clear && eval "$@"
}

# --------------------------------------------------------

# history list

function hf() {
clear
if [ $# != 1 ]; then
    echo 'Number of argumets to function "hf" must be exactly 1 [one]!'
else
    history | grep "$1"
fi
}

# --------------------------------------------------------
function lsl()  {
    for file in *
    do
        if [ -h $file ]; then
                # echo $file
                ls -got $file
        fi
    done
}

# --------------------------------------------------------
function aln() {
clear
eval "$@"
echo -e "\n"
}

# --------------------------------------------------------
# staro - CEZ CEL EKRAN!!
# function crtice() {
#   printf "%$(tput cols)s\n" | tr " "  "-"
#   }
# NOVO - 87 ZNAKOV
function crtice() {
    _ST_ZNAKOV=85
    printf "%${_ST_ZNAKOV}s\n" | tr " " "-" # draw a line of "-" number-of-chars times ...
    }

# --------------------------------------------------------
function cdh() {

# check if there is one and only on argument:
if [ $# -ne 1 ]; then
    clear
    echo "Usage $0 [path relative to \$HOME]"
else

    GR_RELPTH="$1"
    # read -p "Relative path to \$HOME: ${GR_RELPTH}. Continue?"
    cd $HOME/${GR_RELPTH}
fi

}

# ---------------------------------------------------------
# added 20160422
function upup(){ DEEP=$1; [ -z "${DEEP}" ] && { DEEP=1; }; for i in $(seq 1 ${DEEP}); do cd ../; done; }


# ---------------------------------------------------
# added 20160526
# start new mintty window with screen and lyt-{1,2,3}
function skrn() {

gr_FJL="~/.screen-lyt"
if [ $1 -eq 0 ] || [ $1 -eq 1 ] || [ $1 -eq 2 ] || [ $1 -eq 3 ]; then
    gr_PRM=$1
    mintty -e screen -c ${gr_FJL}-${gr_PRM} & 2>/dev/null
else
    gr_PRM="0"
    mintty -e screen -c ${gr_FJL}-${gr_PRM} & 2>/dev/null
fi

# mintty -e screen -c ${gr_FJL}-${gr_PRM} & 2>/dev/null

}

# -------------------------------------------------------
# added 20160617
function danes_shrani() {

gr_DNS_H='/h/2016-danes'

    if [ ${gr_DNS_H} ]; then
        rsync -avn --delete /c/Users/gregor.redelonghi/2016/ ${gr_DNS_H}/
        echo -e "\nrsync -avn --delete /c/Users/gregor.redelonghi/2016/ ${gr_DNS_H}/\n"
    else
        echo "There is no ${gr_DNS_H}. Exiting ..."
        # exit 1
    fi
}

# --------------------------------------------------------
# added 20160621
# mplayer function that accepts unix path and converts it into windows path
# mplayer must be softlinked to cygwin executable path!!
function mplyr() {

    # check if there is one and only on argument:
    if [ $# -ne 1 ]; then
        clear
        echo "Usage mplyr \"[full unix path to video/audio file]\""
    else

    gr_PTH="$1"
    gr_WPTH=$(cygpath -w "${gr_PTH}")
    echo "command: mplayer \"${gr_WPTH}\""
    read -p "OK?(clock any ky to proceed, or ctrl-c to quit)."
    mplayer "${gr_WPTH}"
    fi
# exit
}


# --------------------------------------------------------
# # added 20170804 - function that combines ydd and RSYNC-en
#
function ydd() {
    yes | ddbak && yes | ddlog
}

function yddr() {
    yes | ddbak && yes | ddlog && RSYNC-BACKUP-en
}

function pddr() {
    pddbak && pddlog && RSYNC-BACKUP-en
}

function pdd() {
    pddbak && pddlog
}


function sbr() {
    clear && source ~/.bashrc
}

function sbc() {
    clear && source ~/.black_white_bashrc
}

### --------------------------------------------------------------------
### 20180228
function tmxs1() {
    # tmux -f ~/.mytmuxconf attach
    tmux -f ~/.tmux_1_conf attach
}


function tmxs() {
    # tmux -f ~/.mytmuxconf attach
    tmux -f ~/.tmux_7_conf attach
}


# 20141027 IFS value settings
# set IFS to newline '\n'
function nifs() {
	echo -n "setting IFS to newline ..." 
	IFS=$'\n'
	echo " done."
}

# set IFS to orginal ' \t\n'
function oifs() {
	echo -n "setting IFS to original value ..."
	IFS=$' \t\n'
	echo " done."
	}


function gcs() {
	gr_PTH=file://$(cygpath -w $PWD | sed 's:\\:/:g')
	gr_FJL=$1
    cygstart /c/Users/gregor.redelonghi/AppData/Local/Google/Chrome/Application/chrome.exe ${gr_PTH}/${gr_FJL}
}


function ffs() {
	gr_PTH=file://$(cygpath -w $PWD | sed 's:\\:/:g')
	gr_FJL=$1
    cygstart ${FF_en} ${gr_PTH}/${gr_FJL}
}

function turl() {
	if [ -z "$URL" ]; then
		echo "URL is empty"
	else
		echo "URL=$URL"
	fi
}


# 20201012
# neofetch start
function nf() {
	clear
	neofetch
}


# screenfetch
function sf() {
	clear
	screenfetch-dev
}

function updtc() {
	${HOME}/.local/bin/RUN-en-cdng && ${HOME}/.local/bin/drpbx-rclone-ODPRTO1-L-R
	}

# function mupdtc() {
# 	${HOME}/.local/bin/RUN-en-cdng && ${HOME}/.local/bin/meganz-rclone-ODPRTO1-L-R
# 	}

function updts() {
	${HOME}/.local/bin/RUN-en-cdng && ${HOME}/.local/bin/drpbx-rclone-sync-ODPRTO1-L-R
	}

function mupdts() {
	${HOME}/.local/bin/RUN-en-cdng && ${HOME}/.local/bin/meganz-rclone-sync-ODPRTO1-L-R
	}

function o24() {
	cygstart explorer /E, $(cygpath -w /c/users/gregor.redelonghi/${CURRYR})
}

function pwf() {
	t-gremdomov
}

# 20221213
function cless() {
	if [ $# != 1 ]; then
		return
	fi

	highlight -O  ansi $@ | less
}

function cf() {
	cd $(ls -aF --group-directories-first | fzf --reverse)
}

# 20230405

function git_ndot() {

	NDOTGITDIR="/home/gregor.redelonghi/majstaf_en/en_git/en_metsys"
	NDOTWORKTREE="/home/gregor.redelonghi/majstaf_en/en_git/src_en_metsys"

	/usr/bin/git --git-dir=${NDOTGITDIR} --work-tree=${NDOTWORKTREE} "$@"
}

function git_nvol() {

	NVOLGITDIR="/home/gregor.redelonghi/majstaf_en/en_git/en_nvol"
	NVOLWORKTREE="/c/Users/gregor.redelonghi/majstaf_en/en_staf/majvolpejprs"

	/usr/bin/git --git-dir=${NVOLGITDIR} --work-tree=${NVOLWORKTREE} "$@"
}

function pcs() {
	cygstart /c/Users/gregor.redelonghi/majstaf_en/majprogs_en/processing-4.2-windows-x64/processing-4.2/processing.exe
}

function neww() {
	nohup /usr/bin/mintty -e /usr/bin/bash -c "~/majstaf_en/majbin_en/BrthReminder/BrthReminder_c_color.exe;cd;bash" 2>/dev/null
}
